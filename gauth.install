<?php
/**
 * @file
 * Install and uninstall functions for the Google OAuth module.
 */


/**
 * Implements hook_schema().
 */
function gauth_schema() {
  $schema['gauth_accounts'] = array(
    'description' => 'Google OAuth2 api information.',
    'fields' => array(
      'id' => array(
        'description' => 'A unique identifier for the google api.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The account name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'developer_key' => array(
        'description' => 'The api key for Google Access.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'client_id' => array(
        'description' => 'The Client Id of Google Account.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'client_secret' => array(
        'description' => 'The Client Secret Id of Google Account.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'services' => array(
        'description' => 'The OAuth account is used for which services.',
        'type' => 'text',
      ),
      'access_token' => array(
        'description' => 'The OAuth access token.',
        'type' => 'text',
      ),
      'access_type' => array(
        'description' => 'Stores the access type of the account',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'offline',
      ),
      'is_authenticated' => array(
        'description' => 'Is the account authenticated and ready to use?.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The users uid of the user who created the gauth account.',
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  $schema['cache_gauth_scopes'] = backdrop_get_schema_unprocessed('system', 'cache');

  return $schema;
}


/**
 * Convert Google Auth variables to config settings.
 */
function gauth_update_1000() {
  $config = config('gauth.settings');
  $config->set('gauth_google_api_services',
    update_variable_get('gauth_google_api_services', array()));
  $config->save();
  update_variable_del('gauth_google_api_services');

}


/**
 * Update table gauth_accounts and add cache table if needed.
 */
function gauth_update_1001() {
  // We'd like to be able to update from any version of Drupal GAuth from 1.4
  // to 2.0 as well as from the 1.x Backdrop version (which was based on
  // Drupal 1.4, and didn't have a hook_update_1000() routine). So we'll check
  // for existence of the various table columns added by the various updates
  // and add them if needed.

  // From update 7002
  $lacks_uid = empty(db_query("
    SHOW COLUMNS
    FROM `gauth_accounts`
    LIKE 'uid'
    ")->fetchField());
  if ($lacks_uid) {
    $field = array(
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
      'description' => 'The  users uid of the user who created the gauth account.',
    );
    db_add_field('gauth_accounts', 'uid', $field);
    db_update('gauth_accounts')
      ->fields(array('uid' => 1))
      ->execute();
  }

  // From update 7003
  $lacks_access_type = empty(db_query("
    SHOW COLUMNS
    FROM `gauth_accounts`
    LIKE 'access_type'
    ")->fetchField());
  if ($lacks_access_type) {
    $field = array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => 'offline',
      'description' => 'Stores the access type of the account.',
    );
    db_add_field('gauth_accounts', 'access_type', $field);
    db_update('gauth_accounts')
      ->fields(array('access_type' => 'offline'))
      ->execute();
    }

  // From update 7004
  $lacks_cache = empty(db_query("
    SHOW TABLES LIKE 'cache_gauth_scopes'
    ")->fetchField());
  if ($lacks_cache) {
    $module = 'gauth';
    $schema = backdrop_get_schema_unprocessed($module);
    _backdrop_schema_initialize($schema, $module, FALSE);
    unset($schema['gauth_accounts']);
    foreach ($schema as $name => $table) {
      db_create_table($name, $table);
    }
  }
}
